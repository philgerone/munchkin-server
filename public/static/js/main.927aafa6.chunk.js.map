{"version":3,"sources":["logo.svg","cards.js","overmind/actions.js","overmind/index.js","overmind/state.js","Deck.js","Decks.js","App.js","reportWebVitals.js","index.js"],"names":["index","createArray","size","Array","from","keys","piecesOr","map","card","type","value","squelette","cailloux","pierresPrecieuses","idx","cards","setPlayers","players","state","config","title","actions","useState","createStateHook","useActions","createActionsHook","createEffectsHook","createReactionHook","useStyles","makeStyles","theme","root","flexGrow","paper","height","width","Deck","player","classes","isDealer","Grid","container","className","spacing","Paper","name","isPlaying","margin","padding","Decks","justify","alignItems","item","modal","display","justifyContent","backgroundColor","palette","background","border","boxShadow","shadows","App","React","setStarted","setResponse","socketRef","useRef","modalOpen","setModalOpen","setName","anchorEl","setAnchorEl","open","Boolean","me","find","p","amIPlaying","amIDealer","useEffect","socket","socketIOClient","current","on","data","console","log","alert","disconnect","handleModalClose","handleNewDuel","AppBar","position","Toolbar","IconButton","edge","menuButton","color","aria-label","onClick","event","currentTarget","Typography","variant","id","keepMounted","onClose","TransitionComponent","Fade","MenuItem","emit","direction","style","length","Button","disabled","Dialog","aria-labelledby","DialogContent","DialogContentText","TextField","autoFocus","label","fullWidth","onChange","target","DialogActions","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","overmind","createOvermind","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.927aafa6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","let index = 0;\r\nconst createArray = (size) => {\r\n  return Array.from(Array(size).keys());\r\n};\r\ncreateArray(5); /* ? */\r\nconst piecesOr = createArray(11).map((card) => ({\r\n  index: index++,\r\n  type: \"Pièce d'or\",\r\n  value: 0.5\r\n}));\r\nconst squelette = {\r\n  index: index++,\r\n  type: \"squelette\",\r\n  value: 1\r\n};\r\nconst cailloux = createArray(4).map((card) => ({\r\n  index: index++,\r\n  type: \"Cailloux\",\r\n  value: 0\r\n}));\r\nconst pierresPrecieuses = () =>\r\n  createArray(7).map((card, idx) => ({\r\n    index: index++,\r\n    type: \"Pierre précieuse\",\r\n    value: idx + 1\r\n  }));\r\n\r\nconst cards = [\r\n  ...piecesOr,\r\n  ...cailloux,\r\n  ...pierresPrecieuses(),\r\n  ...pierresPrecieuses(),\r\n  ...pierresPrecieuses(),\r\n  ...pierresPrecieuses(),\r\n  squelette\r\n];\r\n\r\nexport default cards;\r\n","export const setPlayers = ({ state }, players) => {\r\n  state.players = players;\r\n};\r\n","import {\r\n  createStateHook,\r\n  createActionsHook,\r\n  createEffectsHook,\r\n  createReactionHook\r\n} from \"overmind-react\";\r\n\r\nimport { state } from \"./state\";\r\nimport * as actions from \"./actions\";\r\n\r\nexport const config = {\r\n  state,\r\n  actions\r\n};\r\n\r\nexport const useState = createStateHook();\r\nexport const useActions = createActionsHook();\r\nexport const useEffects = createEffectsHook();\r\nexport const useReaction = createReactionHook();\r\n","import cards from \"../cards\";\r\n\r\nconst createPlayer = (name, isDealer) => {\r\n  return {\r\n    name,\r\n    isDealer: isDealer ?? false,\r\n    cards: []\r\n  };\r\n};\r\n\r\nexport const state = {\r\n  title: \"Casino pirate\",\r\n  players: [\r\n    // createPlayer(\"Noam\", true),\r\n    // createPlayer(\"Khalled\"),\r\n    // createPlayer(\"Daoud\"),\r\n    // createPlayer(\"Amine\"),\r\n    // createPlayer(\"Pge\")\r\n  ],\r\n  cards\r\n};\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  paper: {\r\n    height: 140,\r\n    width: 200\r\n  }\r\n}));\r\n\r\nfunction Deck({ player, isDealer }) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid container className={classes.root} spacing={2}>\r\n      <Paper className={classes.paper}>\r\n        <Grid>{`Player ${player.name} ${\r\n          player.isDealer ? \"(DEALER)\" : player.isPlaying ? \"(PLAYING)\" : \"\"\r\n        }`}</Grid>\r\n      </Paper>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default Deck;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nimport Deck from \"./Deck\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    // border: \"1px solid red\",\r\n    margin: 5,\r\n    padding: 5\r\n  }\r\n}));\r\n\r\nfunction Decks({ players }) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      className={classes.root}\r\n      justify=\"space-between\"\r\n      alignItems=\"center\"\r\n      spacing={3}>\r\n      {players.map((player) => (\r\n        <Grid key={player.name} item>\r\n          <Deck player={player} />\r\n        </Grid>\r\n      ))}\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default Decks;\r\n","import React, { useRef, useEffect } from \"react\";\n\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\n\nimport { useState, useActions, useEffects, useReaction } from \"./overmind\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\n\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport Fade from \"@material-ui/core/Fade\";\n\nimport Decks from \"./Decks\";\n\nimport socketIOClient from \"socket.io-client\";\nconst ENDPOINT = \"http://localhost:8080\";\n\nconst ITEM_HEIGHT = 48;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1\n  },\n  modal: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    border: \"2px solid #000\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3)\n  }\n}));\n\nfunction App() {\n  const [started, setStarted] = React.useState(false);\n  const [response, setResponse] = React.useState(\"\");\n  const socketRef = useRef();\n  const [modalOpen, setModalOpen] = React.useState(false);\n  const [name, setName] = React.useState(\"\");\n  const classes = useStyles();\n  const state = useState();\n  const actions = useActions();\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n\n  const me = state.players.find((p) => p.name === name);\n  const amIPlaying = me?.isPlaying;\n  const amIDealer = me?.isDealer;\n\n  useEffect(() => {\n    const socket = socketIOClient(ENDPOINT);\n    socketRef.current = socket;\n    socket.on(\"hello\", (data) => {\n      console.log(\"🚀 ~ file: App.js ~ line 74 ~ socket.on ~ HELLO\", data);\n    });\n    socket.on(\"FromAPI\", (data) => {\n      setResponse(data);\n    });\n    socket.on(\"emtyDeck\", () => {\n      console.log(\"emty deck\");\n    });\n    socket.on(\"card\", (card) => {\n      console.log(\"🚀 ~ file: App.js ~ line 80 ~ socket.on ~ card\", card);\n      console.log(\"card\", card);\n    });\n    socket.on(\"newGame\", (players) => {\n      console.log(\"🚀 ~ file: App.js ~ line 83 ~ socket.on ~ newGame\", players);\n      actions.setPlayers(players);\n    });\n    socket.on(\"players\", (players) => {\n      console.log(\"🚀 ~ file: App.js ~ line 83 ~ socket.on ~ players\", players);\n      actions.setPlayers(players);\n    });\n    socket.on(\"playerAlreadyExist\", (name) => {\n      alert(`Le joueur ${name} existe déjà`);\n    });\n\n    // CLEAN UP THE EFFECT\n    return () => {\n      socket.disconnect();\n      socketRef.current = null;\n    };\n    //\n  }, []);\n\n  const handleNewGame = () => {\n    setAnchorEl(null);\n    socketRef.current.emit(\"newGame\");\n  };\n\n  const handleChooseDealer = () => {\n    setAnchorEl(null);\n    socketRef.current.emit(\"chooseDealer\");\n  };\n\n  const handlePlay = () => {\n    setAnchorEl(null);\n    setModalOpen(true);\n  };\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleModalOpen = () => {\n    setModalOpen(true);\n  };\n\n  const handleModalClose = () => {\n    setModalOpen(false);\n  };\n\n  const handleEnterGame = () => {\n    socketRef.current.emit(\"newPlayer\", name);\n    setStarted(true);\n    setModalOpen(false);\n  };\n\n  const handleNewDuel = () => {\n    // socketRef.current.emit(\"newCard\", \"ouverte\");\n  };\n  const handleOuverte = () => {\n    socketRef.current.emit(\"newCard\", \"ouverte\");\n  };\n  const handleFerme = () => {\n    socketRef.current.emit(\"newCard\", \"ferme\");\n  };\n  const handleServi = () => {\n    socketRef.current.emit(\"servi\");\n  };\n\n  const handleChange = (event) => {\n    setName(event.target.value);\n  };\n\n  return (\n    <>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"menu\"\n            onClick={handleClick}>\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            Casino pirate\n          </Typography>\n        </Toolbar>\n      </AppBar>\n\n      <Menu\n        id=\"fade-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={open}\n        onClose={handleClose}\n        TransitionComponent={Fade}>\n        <MenuItem onClick={handleNewGame}>Nouvelle partie</MenuItem>\n        <MenuItem onClick={handleChooseDealer}>Choisir dealer</MenuItem>\n        <MenuItem onClick={handlePlay}>Jouer</MenuItem>\n      </Menu>\n\n      <Grid\n        container\n        direction=\"column\"\n        justify=\"center\"\n        alignItems=\"center\"\n        spacing={3}>\n        {/* <img src={logo} className=\"App-logo\" alt=\"logo\" /> */}\n        <Grid item style={{ width: \"100%\" }}>\n          <Decks players={state.players} />\n        </Grid>\n        <Grid item style={{ width: \"100%\" }}>\n          {`Cards : ${state.cards.length}`}\n        </Grid>\n        <Grid item>\n          {amIDealer && (\n            <Button variant=\"contained\" color=\"primary\" onClick={handleNewDuel}>\n              Nouveau duel\n            </Button>\n          )}\n          {amIDealer && (\n            <Button variant=\"contained\" color=\"primary\" onClick={handleNewDuel}>\n              Nouveau carte\n            </Button>\n          )}\n          {!amIDealer && (\n            <>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={handleOuverte}\n                disabled={!amIPlaying}>\n                Ouverte\n              </Button>\n\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={handleFerme}\n                disabled={!amIPlaying}>\n                Fermée\n              </Button>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={handleServi}\n                disabled={!amIPlaying}>\n                Servi\n              </Button>\n            </>\n          )}\n        </Grid>\n\n        <Dialog\n          open={modalOpen}\n          onClose={handleModalClose}\n          aria-labelledby=\"form-dialog-title\">\n          {/* <DialogTitle id=\"form-dialog-title\">Nom</DialogTitle> */}\n          <DialogContent>\n            <DialogContentText>Entrez votre nom.</DialogContentText>\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"name\"\n              label=\"Nom du joueur\"\n              type=\"text\"\n              fullWidth\n              value={name}\n              onChange={handleChange}\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleModalClose} color=\"primary\">\n              Annuler\n            </Button>\n            <Button\n              onClick={handleEnterGame}\n              color=\"primary\"\n              disabled={name.length === 0}>\n              Ok\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </Grid>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport { createOvermind } from \"overmind\";\nimport { Provider } from \"overmind-react\";\n\nimport { config } from \"./overmind\";\n\nconst overmind = createOvermind(config);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider value={overmind}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}