{"version":3,"sources":["logo.svg","images/nez flottant.png","images/dragon de plutonium.png","helpers.js","types.js","card.js","cards.js","deck.js","player.js","overmind/state.js","overmind/actions.js","overmind/index.js","components/Deck.js","components/Decks.js","components/Player.js","components/Card.js","Munchkin.js","components/Players.js","App.js","reportWebVitals.js","index.js"],"names":["createArray","size","Array","from","keys","TYPE_CARTE","GAME_STEPS","Card","name","type","bonus","this","inHand","Item","value","reserveA","interditA","Monster","level","levelGain","treasureGain","index","piecesOr","map","card","squelette","cailloux","pierresPrecieuses","idx","cards","Deck","lengthh","nb","isEmpty","nextCard","push","min","max","length","Math","floor","random","splice","Player","class","race","filter","reduce","acc","bonuses","forEach","monster","fightLevel","monsters","i","m","treasures","createItems","deckT","player","addCards","nextCards","player2","player3","players","state","title","currentPlayer","gameStep","dungeonDeck","treasureDeck","meName","me","derived","find","setMe","setPlayers","setGameStep","config","actions","useState","createStateHook","useActions","createActionsHook","createEffectsHook","createReactionHook","makeStyles","theme","root","flexGrow","paper","width","margin","padding","Decks","useStyles","display","formControl","spacing","text","classes","React","setState","handleChange","event","target","checked","Paper","className","Typography","variant","gutterBottom","Grid","FormControl","component","FormLabel","FormGroup","FormControlLabel","control","Checkbox","onChange","label","button","marginTop","minWidth","age","setAge","open","setOpen","InputLabel","id","Select","labelId","onClose","onOpen","MenuItem","Button","Munchkin","donjonDeck","win","fight","treasure","cardsCount","dead","curse","Players","console","log","container","justify","alignItems","item","modal","justifyContent","backgroundColor","palette","background","border","boxShadow","shadows","zoom","transition","transform","deck","DeckClass","munchkin","App","setCard","setWin","socketRef","useRef","modalOpen","setModalOpen","setName","anchorEl","setAnchorEl","Boolean","useEffect","_name","localStorage","getItem","handleModalClose","handleNewDuel","handleLoot","pillerPiece","AppBar","position","Toolbar","IconButton","edge","menuButton","color","aria-label","onClick","currentTarget","keepMounted","TransitionComponent","Fade","current","emit","direction","style","Divider","result","ouvrirPorte","disabled","chercherBagarre","charite","Dialog","aria-labelledby","DialogContent","DialogContentText","TextField","autoFocus","fullWidth","DialogActions","setItem","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","overmind","createOvermind","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.54d991ce.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export default __webpack_public_path__ + \"static/media/nez flottant.9e518018.png\";","export default __webpack_public_path__ + \"static/media/dragon de plutonium.72cb6fdb.png\";","// min and max included\r\nexport function randomInt(min, max) {\r\n  return Math.floor(Math.random() * (max - min + 1) + min);\r\n}\r\n\r\nexport function createArray(size) {\r\n  return Array.from(Array(size).keys());\r\n}\r\n","export const RUNAWAY_MIN_DICE = 5;\r\n\r\nexport const ITEM_TYPE = {\r\n  MAIN: \"MAIN\",\r\n  DEUX_MAIN: \"DEUX_MAIN\",\r\n  ARMURE: \"ARMURE\",\r\n  CHAUSSURES: \"CHAUSSURES\",\r\n  COUVRE_CHEF: \"COUVRE_CHEF\"\r\n};\r\nexport const ITEM_TYPE_BIG = {\r\n  GROS: \"GROS\",\r\n  ARMURE_GROS: \"ARMURE_GROS\",\r\n  DEUX_MAIN_GROS: \"DEUX_MAIN_GROS\"\r\n};\r\n\r\nexport const CLASSES = {\r\n  GUERRIER: \"GUERRIER\",\r\n  PRETRE: \"PRETRE\",\r\n  VOLEUR: \"VOLEUR\",\r\n  MAGICIEN: \"MAGICIEN\"\r\n};\r\n\r\nexport const RACES = {\r\n  HUMAIN: \"HUMAIN\",\r\n  NAIN: \"NAIN\",\r\n  HALFELIN: \"HALFELIN\",\r\n  ELFE: \"ELFE\"\r\n};\r\n\r\nexport const TYPE_CARTE = {\r\n  MONSTRE: \"MONSTRE\",\r\n  ITEM: \"ITEM\",\r\n  RACE: \"RACE\",\r\n  CLASSE: \"CLASSE\",\r\n  MALEDICTION: \"MALEDICTION\",\r\n  POTION: \"POTION\",\r\n  GAIN_NIVEAU: \"GAIN_NIVEAU\"\r\n};\r\n\r\nexport const FIGHT_RESULT = {\r\n  WIN: \"WIN\",\r\n  LOOSE: \"LOOSE\"\r\n};\r\n\r\nexport const GAME_STEPS = {\r\n  OPEN_DOOR: \"MONSTRE\",\r\n  TROUBLE: \"TROUBLE\",\r\n  LOOT: \"LOOT\",\r\n  CHARITY: \"CHARITY\",\r\n  END: \"END\"\r\n};\r\n\r\nexport const MONSTERS = [\r\n  {\r\n    name: \"3872 orques\",\r\n    level: 10,\r\n    levelGain: 1,\r\n    treasureGain: 3,\r\n    bonusContre: {\r\n      race: RACES.NAIN,\r\n      bonus: 6\r\n    },\r\n    incident: {\r\n      type: \"DE\",\r\n      value: {\r\n        1: \"DEAD\",\r\n        2: \"DEAD\",\r\n        3: -3,\r\n        4: -4,\r\n        5: -5,\r\n        6: -6\r\n      }\r\n    }\r\n  },\r\n  {\r\n    name: \"Lépreuxchaun\",\r\n    level: 4,\r\n    levelGain: 1,\r\n    treasureGain: 2,\r\n    bonusContre: {\r\n      race: RACES.ELFE,\r\n      bonus: 5\r\n    },\r\n    incident: {\r\n      type: TYPE_CARTE.ITEM,\r\n      value: 2\r\n    }\r\n  }\r\n];\r\n\r\nexport const CURSES = [\r\n  {\r\n    name: \"Malédiction\",\r\n    perteItem: ITEM_TYPE.CHAUSSURES\r\n  },\r\n  {\r\n    name: \"Malédiction\",\r\n    perteItem: ITEM_TYPE.COUVRE_CHEF\r\n  }\r\n];\r\n\r\nexport const ITEMS = [\r\n  {\r\n    name: \"Invocation de règles obscures\",\r\n    gainNiveau: 1\r\n  },\r\n  {\r\n    name: \"Potion de poison enflammé\",\r\n    bonus: 3,\r\n    valeur: 100,\r\n    usageUnique: true\r\n  },\r\n  {\r\n    name: \"Cape d'ombre\",\r\n    bonus: 4,\r\n    valeur: 600,\r\n    reserveA: CLASSES.VOLEUR\r\n  },\r\n  {\r\n    name: \"Sandales de protection\",\r\n    bonus: 0,\r\n    valeur: 700,\r\n    type: ITEM_TYPE.CHAUSSURES\r\n  },\r\n  {\r\n    name: \"Armure de mithril\",\r\n    bonus: 3,\r\n    valeur: 600,\r\n    type: ITEM_TYPE_BIG.ARMURE_GROS,\r\n    sousType: \"GROS\",\r\n    interditA: CLASSES.MAGICIEN\r\n  },\r\n  {\r\n    name: \"Brochette de rat de mithril\",\r\n    bonus: 1,\r\n    valeur: 0,\r\n    type: ITEM_TYPE_BIG.MAIN,\r\n    vaincreMonstreSiDefausse: 8\r\n  },\r\n  {\r\n    name: \"Hallebarde Suisse multifonctions\",\r\n    bonus: 4,\r\n    valeur: 600,\r\n    type: ITEM_TYPE_BIG.DEUX_MAIN_GROS,\r\n    sousType: \"GROS\",\r\n    reserveA: RACES.HUMAIN\r\n  }\r\n];\r\n","import { createArray } from \"./helpers\";\r\nimport { TYPE_CARTE } from \"./types\";\r\n\r\nclass Card {\r\n  constructor(name, type, bonus) {\r\n    this.name = name;\r\n    this.type = type;\r\n    this.inHand = true;\r\n  }\r\n}\r\n\r\nclass Item extends Card {\r\n  constructor(name, bonus, value, reserveA, interditA) {\r\n    super(name, TYPE_CARTE.ITEM);\r\n    this.bonus = bonus;\r\n    this.value = value;\r\n    this.reserveA = reserveA;\r\n    this.interditA = interditA;\r\n  }\r\n}\r\n\r\nclass Curse extends Card {\r\n  constructor(name, fn) {\r\n    super(name, TYPE_CARTE.MALEDICTION);\r\n    this.fn = fn;\r\n  }\r\n\r\n  appyCurse(player) {\r\n    this.fn(player);\r\n  }\r\n}\r\n\r\nclass Race extends Card {\r\n  constructor(name, bonus, value) {\r\n    super(name, TYPE_CARTE.RACE);\r\n    this.bonus = bonus;\r\n    this.value = value;\r\n  }\r\n}\r\n\r\nclass Class extends Card {\r\n  constructor(name, bonus, value) {\r\n    super(name, TYPE_CARTE.CLASSE);\r\n    this.bonus = bonus;\r\n    this.value = value;\r\n  }\r\n}\r\n\r\nclass Monster extends Card {\r\n  constructor(name, level, levelGain, treasureGain) {\r\n    super(name, TYPE_CARTE.MONSTRE);\r\n    this.level = level;\r\n    this.levelGain = levelGain;\r\n    this.treasureGain = treasureGain;\r\n  }\r\n}\r\n\r\nconst createMonsters = (nb) => {\r\n  return createArray(nb).map((i) => {\r\n    const index = i + 1;\r\n    const m = new Monster(\"Monster \" + index, index, 1, 1);\r\n    m.index = i;\r\n    return m;\r\n  });\r\n};\r\n\r\nconst createItems = (nb) => {\r\n  return createArray(nb).map((i) => {\r\n    const index = i + 1;\r\n    const m = new Item(\"Item \" + index, index, 100);\r\n    m.index = i;\r\n    return m;\r\n  });\r\n};\r\n\r\nexport { Item, Monster, Curse, Race, Class, createMonsters, createItems };\r\n","let index = 0;\r\nconst createArray = (size) => {\r\n  return Array.from(Array(size).keys());\r\n};\r\n\r\nconst piecesOr = createArray(11).map((card) => ({\r\n  index: index++,\r\n  name: \"Pièce d'or\",\r\n  value: 0.5\r\n}));\r\nconst squelette = {\r\n  index: index++,\r\n  name: \"squelette\",\r\n  value: 1\r\n};\r\nconst cailloux = createArray(4).map((card) => ({\r\n  index: index++,\r\n  name: \"Cailloux\",\r\n  value: 0\r\n}));\r\nconst pierresPrecieuses = () =>\r\n  createArray(7).map((card, idx) => ({\r\n    index: index++,\r\n    type: \"Pierre précieuse\",\r\n    value: idx + 1\r\n  }));\r\n\r\nconst cards = [\r\n  ...piecesOr,\r\n  ...cailloux,\r\n  ...pierresPrecieuses(),\r\n  ...pierresPrecieuses(),\r\n  ...pierresPrecieuses(),\r\n  ...pierresPrecieuses(),\r\n  squelette\r\n];\r\n\r\nexport { piecesOr, squelette, cailloux, pierresPrecieuses };\r\nexport default cards;\r\n","import { randomInt } from \"./helpers\";\r\n\r\nclass Deck {\r\n  constructor(cards) {\r\n    this.cards = cards;\r\n  }\r\n\r\n  get isEmpty() {\r\n    return this.cards.lengthh === 0;\r\n  }\r\n\r\n  nextCards(nb) {\r\n    let cards = [];\r\n    for (let index = 0; index < nb; index++) {\r\n      if (!this.isEmpty) {\r\n        const card = this.nextCard();\r\n\r\n        cards.push(card);\r\n      }\r\n    }\r\n    return cards;\r\n  }\r\n\r\n  nextCard() {\r\n    const index = randomInt(0, this.cards.length - 1);\r\n    const removed = this.cards.splice(index, 1);\r\n\r\n    return removed[0];\r\n  }\r\n}\r\n\r\nexport default Deck;\r\n","import { TYPE_CARTE } from \"./types\";\r\n\r\nclass Player {\r\n  constructor(name) {\r\n    this.name = name;\r\n    this.level = 1;\r\n    this.cards = [];\r\n    this.class = null;\r\n    this.race = \"human\";\r\n  }\r\n\r\n  get bonuses() {\r\n    return this.cards\r\n      .filter((card) => card.type === TYPE_CARTE.ITEM)\r\n      .reduce((acc, card) => {\r\n        acc = acc + card.bonus;\r\n        return acc;\r\n      }, 0);\r\n  }\r\n\r\n  get fightLevel() {\r\n    return this.level + this.bonuses;\r\n  }\r\n\r\n  get cardsCount() {\r\n    return this.cards.length;\r\n  }\r\n\r\n  addCards(cards) {\r\n    cards.forEach((card) => {\r\n      this.cards.push(card);\r\n    });\r\n  }\r\n\r\n  addCard(card) {\r\n    this.cards.push(card);\r\n  }\r\n\r\n  // true if wins\r\n  fight(monster) {\r\n    if (this.fightLevel > monster.level) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n}\r\n\r\nexport default Player;\r\n","import { derived } from \"overmind\";\r\n\r\nimport { createItems, createMonsters } from \"../card\";\r\nimport cards from \"../cards\";\r\nimport Deck from \"../deck\";\r\nimport Player from \"../player\";\r\nimport { GAME_STEPS } from \"../types\";\r\n\r\nexport const monsters = createMonsters(10);\r\nexport const treasures = createItems(30);\r\n\r\nexport const createPlayer = (name, isDealer) => {\r\n  return {\r\n    name,\r\n    isPlaying: false,\r\n    cards: []\r\n  };\r\n};\r\n\r\nconst deckT = new Deck(treasures);\r\n\r\nconst player = new Player(\"Pge\");\r\nplayer.addCards(deckT.nextCards(4));\r\nconst player2 = new Player(\"Noam\");\r\nplayer2.addCards(deckT.nextCards(4));\r\nconst player3 = new Player(\"Daoud\");\r\nplayer3.addCards(deckT.nextCards(4));\r\n\r\nexport const players = [\r\n  player,\r\n  player2,\r\n  player3\r\n  // createPlayer(\"Noam\"),\r\n  // createPlayer(\"Khalled\"),\r\n  // createPlayer(\"Daoud\"),\r\n  // createPlayer(\"Amine\"),\r\n  // createPlayer(\"Pge\")\r\n];\r\n\r\nexport const state = {\r\n  title: \"Munchkin\",\r\n  currentPlayer: null,\r\n  gameStep: GAME_STEPS.OPEN_DOOR,\r\n  players,\r\n  dungeonDeck: monsters,\r\n  treasureDeck: treasures,\r\n  cards,\r\n  meName: \"\",\r\n  me: derived((state) => {\r\n    const me = players.find((player) => player.name === state.meName);\r\n    return me;\r\n  })\r\n};\r\n","export const setMe = ({ state }, player) => {\r\n  state.meName = player.name;\r\n};\r\n\r\nexport const setPlayers = ({ state }, players) => {\r\n  state.players = players;\r\n};\r\n\r\nexport const setGameStep = ({ state }, value) => {\r\n  state.gameStep = value;\r\n};\r\n","import {\r\n  createStateHook,\r\n  createActionsHook,\r\n  createEffectsHook,\r\n  createReactionHook\r\n} from \"overmind-react\";\r\n\r\nimport { state } from \"./state\";\r\nimport * as actions from \"./actions\";\r\n\r\nexport const config = {\r\n  state,\r\n  actions\r\n};\r\n\r\nexport const useState = createStateHook();\r\nexport const useActions = createActionsHook();\r\nexport const useEffects = createEffectsHook();\r\nexport const useReaction = createReactionHook();\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { piecesOr } from \"../cards\";\r\n\r\nimport { useState, useActions, useEffects, useReaction } from \"../overmind\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  paper: {\r\n    // height: 140,\r\n    width: 200\r\n  }\r\n}));\r\n\r\n// const cards = piecesOr;\r\n// cards[0].ouverte = true;\r\nfunction Deck({ player, isDealer, name }) {\r\n  const classes = useStyles();\r\n  const state = useState();\r\n\r\n  const amIMe = player?.name === name;\r\n  const cards = amIMe\r\n    ? player.cards\r\n    : player.cards.filter((c) => c.type === \"ouverte\");\r\n  const total = cards.reduce((acc, value) => {\r\n    acc = acc + value.value;\r\n    return acc;\r\n  }, 0);\r\n  return (\r\n    <Grid container className={classes.root} spacing={2}>\r\n      <Paper\r\n        item\r\n        className={classes.paper}\r\n        style={{ border: amIMe ? \"3px solid red\" : \"\" }}>\r\n        <Grid>{`Player ${player.name} ${\r\n          player.isPlaying ? \"(JOUE)\" : \"\"\r\n        }`}</Grid>\r\n        <ul>\r\n          {player.cards.map((card) => {\r\n            return (\r\n              <li>{`${\r\n                amIMe || card.type === \"ouverte\"\r\n                  ? card.type + \" : \" + card.value\r\n                  : \"Fermée\"\r\n              }`}</li>\r\n            );\r\n          })}\r\n          <div>{\"Total : \" + total}</div>\r\n        </ul>\r\n      </Paper>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default Deck;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nimport Deck from \"./Deck\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    // border: \"1px solid red\",\r\n    margin: 5,\r\n    padding: 5\r\n  }\r\n}));\r\n\r\nfunction Decks({ players, name }) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      className={classes.root}\r\n      justify=\"space-between\"\r\n      alignItems=\"center\"\r\n      spacing={3}>\r\n      {players.map((player) => (\r\n        <Grid key={player.name} item>\r\n          <Deck player={player} name={name} />\r\n        </Grid>\r\n      ))}\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default Decks;\r\n","import { makeStyles } from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\n\r\nimport React from \"react\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\"\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1)\r\n  },\r\n  paper: {\r\n    margin: 5,\r\n    padding: 15,\r\n    width: 300\r\n  },\r\n  text: {\r\n    // fontSize: 13\r\n  }\r\n}));\r\n\r\nfunction Player({ player }) {\r\n  const classes = useStyles();\r\n\r\n  const [state, setState] = React.useState({});\r\n\r\n  const handleChange = (event) => {\r\n    setState({ ...state, [event.target.name]: event.target.checked });\r\n  };\r\n\r\n  if (!player) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Paper className={classes.paper}>\r\n      <Typography variant=\"h4\" gutterBottom>\r\n        {player.name}\r\n      </Typography>\r\n      <Grid>{`Niveau : ${player?.level}`}</Grid>\r\n      <Grid>{`Bonuses : ${player.bonuses}`}</Grid>\r\n      <Grid>{`Combat : ${player.fightLevel}`}</Grid>\r\n\r\n      <FormControl component=\"fieldset\" className={classes.formControl}>\r\n        <FormLabel component=\"legend\">\r\n          {`Cartes ${player.cards.length}`}{\" \"}\r\n        </FormLabel>\r\n        <FormGroup>\r\n          {player.cards.map((card) => {\r\n            return (\r\n              <FormControlLabel\r\n                key={card.index}\r\n                value={card.name}\r\n                control={\r\n                  <Checkbox\r\n                    checked={state[card.name]}\r\n                    onChange={handleChange}\r\n                    name={card.name}\r\n                  />\r\n                }\r\n                label={\r\n                  <Typography className={classes.text}>\r\n                    {`${card.name} Bonus: ${card.bonus} Valeur: ${card.value}`}\r\n                  </Typography>\r\n                }\r\n              />\r\n            );\r\n          })}\r\n        </FormGroup>\r\n      </FormControl>\r\n\r\n      {/* <ul>\r\n        {player.cards.map((card) => {\r\n          return <li key={card.index}>{`${card.name} : ${card.bonus}`}</li>;\r\n        })}\r\n      </ul> */}\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default Player;\r\n","import React from \"react\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { useState } from \"../overmind\";\r\nimport { TYPE_CARTE } from \"../types\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    display: \"block\",\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120\r\n  },\r\n  paper: {\r\n    margin: 5,\r\n    padding: 15,\r\n    width: 200\r\n  }\r\n}));\r\n\r\nfunction Card({ card }) {\r\n  const classes = useStyles();\r\n  const [age, setAge] = React.useState(\"\");\r\n  const [open, setOpen] = React.useState(false);\r\n  const state = useState();\r\n\r\n  const handleChange = (event) => {\r\n    setAge(event.target.value);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.paper}>\r\n      <Typography variant=\"h4\" gutterBottom>\r\n        {card.name}\r\n      </Typography>\r\n      <Grid>{`Niveau : ${card.level}`}</Grid>\r\n      <Grid>{`Gain : ${card.levelGain}`}</Grid>\r\n      <Grid>{`Trésors : ${card.treasureGain}`}</Grid>\r\n\r\n      {card.type === TYPE_CARTE.MALEDICTION && (\r\n        <>\r\n          <FormControl className={classes.formControl}>\r\n            <InputLabel id=\"demo-controlled-open-select-label\">\r\n              Joueur\r\n            </InputLabel>\r\n            <Select\r\n              labelId=\"demo-controlled-open-select-label\"\r\n              id=\"demo-controlled-open-select\"\r\n              open={open}\r\n              onClose={handleClose}\r\n              onOpen={handleOpen}\r\n              value={age}\r\n              onChange={handleChange}>\r\n              {state.players.map((player) => {\r\n                return (\r\n                  <MenuItem key={player.name} value={player.name}>\r\n                    {player.name}\r\n                  </MenuItem>\r\n                );\r\n              })}\r\n            </Select>\r\n          </FormControl>\r\n          <Button>Envoyer</Button>\r\n        </>\r\n      )}\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import { useActions } from \"./overmind\";\r\nimport { GAME_STEPS, TYPE_CARTE } from \"./types\";\r\n\r\nclass Munchkin {\r\n  constructor(players, donjonDeck, treasureDeck) {\r\n    this.players = players;\r\n    this.donjonDeck = donjonDeck;\r\n    this.treasureDeck = treasureDeck;\r\n  }\r\n\r\n  ouvrirPorte(player) {\r\n    if (this.donjonDeck.isEmpty) {\r\n      return {\r\n        type: \"empty\"\r\n      };\r\n    }\r\n\r\n    const card = this.donjonDeck.nextCard();\r\n\r\n    if (card.type === TYPE_CARTE.MONSTRE) {\r\n      const win = player.fight(card);\r\n\r\n      if (win) {\r\n        player.level += card.levelGain;\r\n\r\n        const treasure = this.treasureDeck.nextCard();\r\n        player.cards.push(treasure);\r\n\r\n        let gameStep;\r\n        if (player.cardsCount > 5) {\r\n          gameStep = GAME_STEPS.CHARITY;\r\n        } else {\r\n          gameStep = GAME_STEPS.END;\r\n        }\r\n\r\n        return {\r\n          type: \"fight\",\r\n          win,\r\n          card,\r\n          gameStep\r\n        };\r\n      } else {\r\n        player.level--;\r\n        if (player.level === 0) {\r\n          player.dead = true;\r\n\r\n          return {\r\n            type: \"dead\",\r\n            card\r\n          };\r\n        }\r\n\r\n        return {\r\n          type: \"fight\",\r\n          win,\r\n          card\r\n        };\r\n      }\r\n    } else if (card.type === TYPE_CARTE.MALEDICTION) {\r\n      player.curse(card);\r\n\r\n      return {\r\n        gameStep: GAME_STEPS.TROUBLE\r\n      };\r\n    } else {\r\n      if (player.cardsCount > 5) {\r\n        return {\r\n          gameStep: GAME_STEPS.CHARITY\r\n        };\r\n      } else {\r\n        return {\r\n          gameStep: GAME_STEPS.END\r\n        };\r\n      }\r\n    }\r\n  }\r\n\r\n  chercherBagarre(player) {\r\n    // choose monster in hand\r\n    // fight\r\n  }\r\n\r\n  pillerPiece(player) {\r\n    // nextCard\r\n  }\r\n\r\n  charite(player) {\r\n    if (player.cardsCount > 5) {\r\n      const lowestPlayers = [];\r\n      lowestPlayers.forEach((player) => {\r\n        // give card\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nexport default Munchkin;\r\n\r\n// const c1 = new Item(\"armure\", 3, 100);\r\n// const player = new Player(\"pge\");\r\n// player.addCard(c1);\r\n\r\n// const monsters = createMonsters(1);\r\n// const treasures = createItems(1);\r\n// const deck = new Deck(monsters);\r\n// const deckT = new Deck(treasures);\r\n// const m = new Munchkin([player], deck, deckT);\r\n// m.ouvrirPorte(player); /* ? */\r\n// player.level; /* ? */\r\n","import { Grid } from \"@material-ui/core\";\r\nimport { useState } from \"../overmind\";\r\nimport Player from \"./Player\";\r\n\r\nfunction Players() {\r\n  const state = useState();\r\n  console.log(\"🚀 ~ file: Players.js ~ line 7 ~ Players ~ state\", state);\r\n\r\n  return (\r\n    <Grid container justify=\"space-evenly\" alignItems=\"center\">\r\n      {state.players\r\n        .filter((player) => player.name !== state.me?.name)\r\n        .map((player) => {\r\n          return (\r\n            <Grid item>\r\n              <Player key={player.name} player={player} />\r\n            </Grid>\r\n          );\r\n        })}\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default Players;\r\n","import React, { useRef, useEffect } from \"react\";\n\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\n\nimport nez from \"./images/nez flottant.png\";\nimport dragon from \"./images/dragon de plutonium.png\";\n\nimport { useState, useActions, useEffects, useReaction } from \"./overmind\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\n\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport Fade from \"@material-ui/core/Fade\";\n\nimport Decks from \"./components/Decks\";\nimport Player from \"./components/Player\";\n\nimport socketIOClient from \"socket.io-client\";\nimport Card from \"./components/Card\";\nimport Munchkin from \"./Munchkin\";\nimport { Item } from \"./card\";\nimport PlayerClass from \"./player\";\nimport DeckClass from \"./deck\";\n\nimport { monsters, treasures, players } from \"./overmind/state\";\nimport Players from \"./components/Players\";\nimport { GAME_STEPS } from \"./types\";\n\nconst ENDPOINT = \"http://192.168.0.82:8080\";\n\nconst ITEM_HEIGHT = 48;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1\n  },\n  modal: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    border: \"2px solid #000\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3)\n  },\n  zoom: {\n    padding: \"50px\",\n    transition: \"transform .2s\" /* Animation */,\n    // width: '200px',\n    // height: '200px',\n    margin: \"0 auto\",\n    \"&:hover\": {\n      transform: \"scale(2)\"\n    }\n  }\n}));\n\n// const c1 = new Item(\"armure\", 3, 100);\n// const player = new PlayerClass(\"Pge\");\n// player.addCard(c1);\nconst deck = new DeckClass(monsters);\nconst deckT = new DeckClass(treasures);\nconst munchkin = new Munchkin(players, deck, deckT);\n\nfunction App() {\n  const [deck, setDeck] = React.useState([]);\n  const [card, setCard] = React.useState();\n  const [win, setWin] = React.useState();\n\n  const socketRef = useRef();\n  const [modalOpen, setModalOpen] = React.useState(false);\n  const [name, setName] = React.useState(\"\");\n  const classes = useStyles();\n  const state = useState();\n  const actions = useActions();\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n\n  const me = state.me;\n  const amIPlaying = true; // me?.isPlaying;\n\n  useEffect(() => {\n    const _name = localStorage.getItem(\"name\");\n    setName(_name ?? \"\");\n\n    const player = state.players.find((player) => player.name === _name);\n    player && actions.setMe(player);\n  }, []);\n\n  // useEffect(() => {\n  //   const socket = socketIOClient(ENDPOINT);\n  //   socketRef.current = socket;\n  //   socket.on(\"hello\", (data) => {\n  //     console.log(\"🚀 ~ file: App.js ~ line 74 ~ socket.on ~ HELLO\", data);\n  //   });\n  //   socket.on(\"emtyDeck\", () => {\n  //     console.log(\"emty deck\");\n  //   });\n  //   socket.on(\"deck\", (sdeck) => {\n  //     console.log(\"🚀 ~ file: App.js ~ line 86 ~ socket.on ~ sdeck\", sdeck);\n  //     setDeck(sdeck);\n  //   });\n  //   socket.on(\"card\", (scard) => {\n  //     setCard(scard);\n  //   });\n  //   socket.on(\"newGame\", (players, sdeck) => {\n  //     console.log(\"🚀 ~ file: App.js ~ line 83 ~ socket.on ~ newGame\", players);\n  //     actions.setPlayers(players);\n  //     setCard(null);\n  //     setDeck(sdeck);\n  //   });\n  //   socket.on(\"players\", (players) => {\n  //     console.log(\"🚀 ~ file: App.js ~ line 83 ~ socket.on ~ players\", players);\n  //     actions.setPlayers(players);\n  //   });\n  //   socket.on(\"playerAlreadyExist\", (name) => {\n  //     alert(`Le joueur ${name} existe déjà`);\n  //   });\n\n  //   // CLEAN UP THE EFFECT\n  //   return () => {\n  //     socket.disconnect();\n  //     socketRef.current = null;\n  //   };\n  //   //\n  // }, []);\n\n  const handleNewGame = () => {\n    setAnchorEl(null);\n    socketRef.current.emit(\"newGame\");\n  };\n\n  const handleChooseDealer = () => {\n    setAnchorEl(null);\n    socketRef.current.emit(\"chooseDealer\");\n  };\n\n  const handlePlay = () => {\n    setAnchorEl(null);\n    setModalOpen(true);\n  };\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleModalOpen = () => {\n    setModalOpen(true);\n  };\n\n  const handleModalClose = () => {\n    setModalOpen(false);\n  };\n\n  const handleEnterGame = () => {\n    localStorage.setItem(\"name\", name);\n    // socketRef.current.emit(\"newPlayer\", name);\n    setModalOpen(false);\n  };\n\n  const handleNewDuel = () => {\n    // socketRef.current.emit(\"newCard\", me.name, \"ouverte\");\n  };\n  const handleOpenDoor = () => {\n    const result = munchkin.ouvrirPorte(players[0]);\n    console.log(\n      \"🚀 ~ file: App.js ~ line 167 ~ handleOpenDoor ~ result\",\n      result.type,\n      result.win\n    );\n    if (result.type === \"empty\") {\n      return;\n    }\n    setWin(result.win);\n    setCard(result.card);\n\n    actions.setGameStep(result.gameStep);\n    // socketRef.current.emit(\"newCard\", me.name, \"ouverte\");\n  };\n\n  const handleTrouble = () => {\n    munchkin.chercherBagarre();\n    // socketRef.current.emit(\"newCard\", me.name, \"ferme\");\n  };\n\n  const handleLoot = () => {\n    munchkin.pillerPiece();\n    // socketRef.current.emit(\"servi\");\n  };\n\n  const handleCharity = () => {\n    munchkin.charite();\n    // socketRef.current.emit(\"servi\");\n  };\n\n  const handleChange = (event) => {\n    setName(event.target.value);\n  };\n\n  return (\n    <>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"menu\"\n            onClick={handleClick}>\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            {`${state.title} ${me?.name ? \"du joueur \" + me?.name : \"\"}`}\n          </Typography>\n        </Toolbar>\n      </AppBar>\n\n      <Menu\n        id=\"fade-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={open}\n        onClose={handleClose}\n        TransitionComponent={Fade}>\n        <MenuItem onClick={handleNewGame}>Nouvelle partie</MenuItem>\n        {/* <MenuItem onClick={handleChooseDealer}>Choisir dealer</MenuItem> */}\n        <MenuItem onClick={handlePlay}>Jouer</MenuItem>\n      </Menu>\n\n      <Grid\n        container\n        direction=\"column\"\n        justify=\"center\"\n        alignItems=\"center\"\n        spacing={3}>\n        <Grid item style={{ width: \"100%\" }}>\n          <Typography variant=\"h6\">Joueurs </Typography>\n          <Players />\n          {/* {players.map((player) => {\n            return <Player key={player.name} player={player} />;\n          })} */}\n          {/* <Card card={{ name: \"Malédiction\", level: 1 }} /> */}\n        </Grid>\n        {/* <Grid item style={{ width: \"100%\" }}>\n          <Decks players={state.players} name={name} />\n        </Grid> */}\n        <Grid\n          item\n          container\n          justify=\"space-evenly\"\n          alignItems=\"center\"\n          style={{ border: \"1px solid lightgray\" }}>\n          <Grid item>{`Donjon : ${state.dungeonDeck.length}`}</Grid>\n          <Grid item>{`Trésors : ${state.treasureDeck.length}`}</Grid>\n        </Grid>\n        <Divider />\n        <Grid\n          item\n          container\n          justify=\"space-evenly\"\n          alignItems=\"flex-start\"\n          style={{ border: \"1px solid lightgray\" }}>\n          <Grid item>{<Player player={state.me} />}</Grid>\n          <Grid item>{win && `Monstre vaincu : ${win ? \"OUI\" : \"NON\"}`}</Grid>\n          <Grid item>{card && <Card card={card} />}</Grid>\n        </Grid>\n\n        <Grid item>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={handleOpenDoor}\n            disabled={!(amIPlaying && state.gameStep === GAME_STEPS.OPEN_DOOR)}>\n            Ouvrir porte\n          </Button>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={handleTrouble}\n            disabled={!(amIPlaying && state.gameStep === GAME_STEPS.TROUBLE)}>\n            Cherchez la bagarre\n          </Button>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={handleLoot}\n            disabled={!(amIPlaying && state.gameStep === GAME_STEPS.LOOT)}>\n            Fouillez la pièce\n          </Button>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={handleCharity}\n            disabled={!(amIPlaying && state.gameStep === GAME_STEPS.CHARITY)}>\n            Charité\n          </Button>\n        </Grid>\n        <Grid item>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={handleLoot}\n            disabled={!amIPlaying}>\n            Vendre\n          </Button>\n\n          <Button variant=\"contained\" color=\"primary\" onClick={handleNewDuel}>\n            Malédiction\n          </Button>\n        </Grid>\n        <Grid item>\n          <Button variant=\"contained\" color=\"primary\" onClick={handleNewDuel}>\n            Fin du tour\n          </Button>\n        </Grid>\n\n        {/* <Grid item>\n          <img\n            className={classes.zoom}\n            src={nez}\n            alt={\"nez\"}\n            width=\"132\"\n            height=\"204\"\n          />\n          <img\n            className={classes.zoom}\n            src={dragon}\n            alt={\"nez\"}\n            width=\"132\"\n            height=\"204\"\n          />\n        </Grid> */}\n\n        <Dialog\n          open={modalOpen}\n          onClose={handleModalClose}\n          aria-labelledby=\"form-dialog-title\">\n          {/* <DialogTitle id=\"form-dialog-title\">Nom</DialogTitle> */}\n          <DialogContent>\n            <DialogContentText>Entrez votre nom.</DialogContentText>\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"name\"\n              label=\"Nom du joueur\"\n              type=\"text\"\n              fullWidth\n              value={name}\n              onChange={handleChange}\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleModalClose} color=\"primary\">\n              Annuler\n            </Button>\n            <Button\n              onClick={handleEnterGame}\n              color=\"primary\"\n              disabled={name.length === 0}>\n              Ok\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </Grid>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport { createOvermind } from \"overmind\";\nimport { Provider } from \"overmind-react\";\n\nimport { config } from \"./overmind\";\n\nconst overmind = createOvermind(config);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider value={overmind}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}